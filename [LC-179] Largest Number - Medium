[LC-179] Largest Number - Medium

Given a list of non-negative integers nums, arrange them such that they form the largest number and return it.
Since the result may be very large, so you need to return a string instead of an integer.

Example 1:
Input: nums = [10,2]
Output: "210"

Example 2:
Input: nums = [3,30,34,5,9]
Output: "9534330"

Constraints:
1 <= nums.length <= 100
0 <= nums[i] <= 10^9

[C++] Solution:

//TC: O(k*NlogN): k is average length of an element in nums(which is used to define TC of comparater function) and NlogN is TC of sorting
//SC: O(1)

bool comp (int a, int b){
    return to_string(a) + to_string(b) > to_string(b) + to_string(a);
}

class Solution {
public:
    string largestNumber(vector<int>& nums) {
        sort(nums.begin(), nums.end(), comp);
        string ans;
        for(int i: nums)
            ans += to_string(i);
        if(ans[0] == '0')
            return "0";
        return ans;
    }
};
